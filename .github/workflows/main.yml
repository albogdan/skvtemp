name: CI/CD

on:
  pull_request:
    branches: '**'

jobs:
  backend-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: skule_vote

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.sha}}
      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check formatting with Black
        run: |
          # Stop the build if there are any formatting issues picked up by Black
          black --check .
      - name: Unit Tests
        env:
          SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
          DEBUG: 0
        run: python manage.py test --settings=skule_vote.settings.ci

  frontend-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: skule_vote/frontend/ui

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.sha}}
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: yarn install
      - name: Prettier Formatting Check
        run: yarn prettier --check 'src/**/*.(scss|js)'
      - name: Unit Tests
        run: yarn test --watchAll=false

  deploy:
    runs-on: ubuntu-latest
    needs: [backend-checks, frontend-checks]
    if: github.ref == 'refs/heads/master'
    steps:
      -
      # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name application-name \
            --deployment-group-name AppDeploymentGroupName \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
